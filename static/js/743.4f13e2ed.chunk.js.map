{"version":3,"file":"static/js/743.4f13e2ed.chunk.js","mappings":"wMAGaA,EAAcC,EAAAA,GAAAA,GAAH,iGAOXC,GAAgBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uL,SCPbG,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,OACE,SAACL,EAAD,UACGK,EAAUC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACb,yBACE,SAACN,EAAD,CAAeO,GAAE,kBAAaF,GAA9B,SACGC,KAFID,EADI,KASpB,C,qICQD,EApBqB,SAAC,GAAa,IAAZG,EAAW,EAAXA,MACfC,GAAkBC,EAAAA,EAAAA,MAAkB,GAC1C,GAA0BC,EAAAA,EAAAA,UAAQ,OAACH,QAAD,IAACA,EAAAA,EAAS,IAA5C,eAAOI,EAAP,KAAcC,EAAd,KAQA,OACE,+BACE,kBAAMC,SARW,SAAAC,GACnBA,EAAEC,iBACF,IAAOC,GAAP,OAAgBF,EAAEG,OAAlB,MACAT,EAAgB,CAAEU,aAAcF,EAAML,OACvC,EAIG,WACE,kBAAOQ,KAAK,OAAOR,MAAOA,EAAOS,SAAU,SAAAN,GAAC,OAAIF,EAASE,EAAEG,OAAON,MAAtB,KAC5C,mBAAQQ,KAAK,SAAb,wBAIP,ECOD,EAtBwB,WAAM,IAAD,EACzB,GAAwCV,EAAAA,EAAAA,MAAxC,eAAOY,EAAP,KAAqBb,EAArB,KACA,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeC,EAAf,KACMhB,EAAK,UAAGc,EAAaG,IAAI,uBAApB,QAAuC,GAC5CC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAIpB,EAGA,OAFAC,GAAgB,SAAAoB,GAAgB,OAAIA,EAAiBC,OAAO,eAA5B,SAChCN,EAAU,KAGdO,EAAAA,EAAAA,IAAYvB,GAAOwB,KAAKR,EAC3B,GAAE,CAAChB,EAAOC,KAEP,iCACI,SAAC,EAAD,CAAcD,MAAOA,KACrB,SAACN,EAAA,EAAD,CAAWC,UAAWoB,EAAQU,MAAOP,MAGhD,C","sources":["components/MovieList.styled.js","components/MovieList.jsx","components/MoviesSearch.jsx","components/MovieSearchPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListUl = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  display: inline-block;\n  padding: 5px;\n  border-radius: 3px;\n  &:hover,\n  &:focus {\n    color: lightgrey;\n    background-color: rgb(10, 10, 10);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListUl, MovieListLink } from './MovieList.styled';\n\nexport const MovieList = ({ movieList }) => {\n  return (\n    <MovieListUl>\n      {movieList.map(({ id, original_title }) => (\n        <li key={id}>\n          <MovieListLink to={`/movies/${id}`}>\n            {original_title}\n          </MovieListLink>\n        </li>\n      ))}\n    </MovieListUl>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesSearch = ({query}) => {\n  const setSearchParams = useSearchParams()[1];\n  const [value, setValue] = useState(query ?? '');\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const [input] = e.target;\n    setSearchParams({ movie_search: input.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\"\nimport { searchMovie } from \"tmdbAPI\";\nimport { MovieList } from \"./MovieList\"\nimport MoviesSearch from \"./MoviesSearch\";\n\nconst MovieSearchPage = () =>{\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const query = searchParams.get('movie_search') ?? '';\n    const location = useLocation();\n\n    useEffect(() => {\n        if(!query) {\n            setSearchParams(prevSearchParams => prevSearchParams.delete('movie_search'));\n            setMovies([]);\n            return;\n        }\n        searchMovie(query).then(setMovies)\n    }, [query, setSearchParams]);\n    return (\n        <>\n            <MoviesSearch query={query}/>\n            <MovieList movieList={movies} state={location}/>\n        </>\n    )\n}\n\nexport default MovieSearchPage;"],"names":["MovieListUl","styled","MovieListLink","Link","MovieList","movieList","map","id","original_title","to","query","setSearchParams","useSearchParams","useState","value","setValue","onSubmit","e","preventDefault","input","target","movie_search","type","onChange","searchParams","movies","setMovies","get","location","useLocation","useEffect","prevSearchParams","delete","searchMovie","then","state"],"sourceRoot":""}